/* @license see https://just-be.dev/fonts/bastia/LICENSE */
@font-face {
  font-family: "Bastia-bold";
  font-display: swap;
  src: url("/fonts/bastia/bold.woff2") format("woff2"),
    url("/fonts/bastia/bold.woff") format("woff");
}

@font-face {
  font-family: "Bastia-outline";
  font-display: swap;
  src: url("/fonts/bastia/outline.woff2") format("woff2"),
    url("/fonts/bastia/outline.woff") format("woff");
}

.bastia {
  font-family: "Bastia-bold";
}

.bastia-outline {
  font-family: "Bastia-outline";
}

h1:has(+ p > sup),
h2:has(+ p > sup) {
  margin-bottom: 0rem !important;
}

h1 + p:has(> sup) {
  margin-top: 0rem !important;
  margin-bottom: 0.5rem !important;
}
h1 + p > sup,
h2 + p > sup {
  @apply text-gray-400;
}

blockquote {
  @apply !border-slate-400 bg-gradient-to-r from-slate-300 to-gray-50 !px-6 py-0.5;
}

blockquote ul {
  @apply marker:!text-slate-500;
}

.prose a[href^="http"]::after {
  content: "";
  @apply inline-block size-[0.7rem] lg:size-[0.9rem] ml-[0.2rem] mb-[0.45rem] lg:mb-[0.6rem] align-bottom text-slate-300 stroke-slate-500;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'%3E%3C/path%3E%3Cpolyline points='15 3 21 3 21 9'%3E%3C/polyline%3E%3Cline x1='10' y1='14' x2='21' y2='3'%3E%3C/line%3E%3C/svg%3E");
}

.prose pre:has(code[data-lang]) {
  @apply bg-inherit my-0;
}

/* Work around for nested pre tags */
.prose pre:has(pre[data-lang]) {
  @apply bg-inherit mx-0 -my-5 p-0;
}
